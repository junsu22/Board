로그인 기능 구현

회원 데이터정보를 넣고자 
user 패키지 안에 UserDAO 클래스 파일을 만들어주자.


public class UserDAO {
	private Connection conn;
	private PreparedStatement pstmt;
	private Resultset rs;
}

입력후 ctrl + shift + "o" (대소문자 표기 잘 하기;;)

데이터베이스를 만들었을때 자동으로 connection 할수 있게 만들어 주기

//SQL 접속 
package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class UserDAO {
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public UserDAO() {
		try {
			String dbURL = "jdbc:mysql://localhost:3306/BBS";
			String dbID = "root";
			String dbPassword = "root";
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
}


try catch 예외 처리  e.printStackTrace();
컴퓨터에 설치된 3306 포트 에 BBS 라는 데이터 베이스 에 접속 할 수 있도록 해준다.
설정해준 계정의 pw를 넣어준다.
my sql 드라이버를 찾을수 있도록 해준다.
커넥션은 드라이버 매니져 
dbURL , dbID, dbPassword 를 이용해서 접속할수 있도록 한다.



// 로그인
	//해킹 방어 수단으로 PreparedStatement 이용
	public int login(String userID, String userPassword) {
		// SQL문 작성
		String SQL = "SELECT userPassword FROM USER WHERE userID = ?";
		try {
			pstmt = conn.prepareStatement(SQL); // 정해진 SQL문장을 데이터베이스에 삽입하는 형식으로 인스턴스를 가져온다.
			pstmt.setString(1, userID);
			rs = pstmt.executeQuery(); // 결과를 담을수 있는 하나의 객체에 실행 한 결과를 넣어준다.
			//userID 가 "?" 에 들어간다.실제 아이디 존재여부 확인
		} catch (Exception e) {
			// 예외가 발생한경우 출력
			e.printStackTrace();
		}
		return -2; // return -2 는 데이터 오류를 의미.
	}

}






- loginAction.jsp
